import type { ZerionConnector } from "../connectors/zerion";
import type { WalletConnectV1Connector as WalletConnectV1ConnectorType } from "../connectors/wallet-connect-v1";
import { Connector } from "../interfaces/connector";
import { AbstractClientWallet, WalletOptions } from "./base";
type ConnectWithQrCodeArgs = {
    chainId?: number;
    onQrCodeUri: (uri: string) => void;
    onConnected: (accountAddress: string) => void;
};
export declare class ZerionWallet extends AbstractClientWallet {
    connector?: Connector;
    zerionConnector?: ZerionConnector;
    walletConnectConnector?: WalletConnectV1ConnectorType;
    isInjected: boolean;
    static id: "zerion";
    static meta: {
        name: string;
        iconURL: string;
        urls: {
            chrome: string;
            android: string;
            ios: string;
        };
    };
    get walletName(): string;
    constructor(options?: WalletOptions);
    protected getConnector(): Promise<Connector>;
    connectWithQrCode(options: ConnectWithQrCodeArgs): Promise<void>;
}
export {};
//# sourceMappingURL=zerion.d.ts.map