import { Chain } from "@thirdweb-dev/chains";
import { ConnectParams, Connector } from "../../interfaces/connector";
import { SmartWalletConfig, SmartWalletConnectionArgs } from "./types";
import { EVMWallet } from "../../interfaces";
import { ERC4337EthersSigner } from "./lib/erc4337-signer";
import { providers } from "ethers";
import { Transaction, TransactionResult } from "@thirdweb-dev/sdk";
export declare class SmartWalletConnector extends Connector<SmartWalletConnectionArgs> {
    private config;
    private aaProvider;
    private accountApi;
    personalWallet?: EVMWallet;
    constructor(config: SmartWalletConfig);
    initialize(personalWallet: EVMWallet): Promise<void>;
    connect(connectionArgs: ConnectParams<SmartWalletConnectionArgs>): Promise<string>;
    getProvider(): Promise<providers.Provider>;
    getSigner(): Promise<ERC4337EthersSigner>;
    getAddress(): Promise<string>;
    isConnected(): Promise<boolean>;
    disconnect(): Promise<void>;
    switchChain(chainId: number): Promise<void>;
    setupListeners(): Promise<void>;
    updateChains(chains: Chain[]): void;
    /**
     * Execute a single transaction
     * @param transactions
     * @returns the transaction receipt
     */
    execute(transaction: Transaction): Promise<TransactionResult>;
    /**
     * Execute multiple transactions in a single batch
     * @param transactions
     * @returns the transaction receipt
     */
    executeBatch(transactions: Transaction[]): Promise<TransactionResult>;
    /**
     * Manually deploy the smart wallet contract. If already deployed this will throw an error.
     * Note that this is not necessary as the smart wallet will be deployed automatically on the first transaction the user makes.
     * @returns the transaction receipt
     */
    deploy(): Promise<TransactionResult>;
    /**
     * Check if the smart wallet contract is deployed
     * @returns true if the smart wallet contract is deployed
     */
    isDeployed(): Promise<boolean>;
    private defaultFactoryInfo;
    private defaultAccountInfo;
}
//# sourceMappingURL=index.d.ts.map