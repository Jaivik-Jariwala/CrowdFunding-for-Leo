'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var zksyncWeb3 = require('zksync-web3');
var contractPublisher = require('../../../dist/contract-publisher-a9312a1a.cjs.prod.js');
var sdk = require('../../../dist/sdk-1570c119.cjs.prod.js');
var ethers = require('ethers');
require('../../../dist/QueryParams-d1f9b934.cjs.prod.js');
require('bn.js');
require('zod');
require('@thirdweb-dev/storage');
require('tiny-invariant');
require('@thirdweb-dev/contracts-js/dist/abis/IERC20Metadata.json');
require('merkletreejs');
require('@thirdweb-dev/contracts-js/dist/abis/IERC20.json');
require('fast-deep-equal');
require('uuid');
require('@thirdweb-dev/contracts-js/dist/abis/IERC165.json');
require('@thirdweb-dev/contracts-js/dist/abis/IERC721Metadata.json');
require('@thirdweb-dev/contracts-js/dist/abis/IERC1155Metadata.json');
require('@thirdweb-dev/contracts-js/dist/abis/IDelayedRevealDeprecated.json');
require('@thirdweb-dev/contracts-js/dist/abis/IThirdwebContract.json');
require('@thirdweb-dev/contracts-js/dist/abis/IERC721.json');
require('@thirdweb-dev/contracts-js/dist/abis/IERC1155.json');
require('@thirdweb-dev/contracts-js/dist/abis/IAccountFactory.json');
require('@thirdweb-dev/chains');
require('ethers/lib/utils');
require('bs58');
require('@thirdweb-dev/contracts-js/dist/abis/TWMultichainRegistryLogic.json');
require('@thirdweb-dev/contracts-js/dist/abis/ERC2771Context.json');
require('@thirdweb-dev/contracts-js/dist/abis/IAppURI.json');
require('@thirdweb-dev/contracts-js/dist/abis/IContractMetadata.json');
require('@thirdweb-dev/contracts-js/dist/abis/IDirectListings.json');
require('@thirdweb-dev/contracts-js/dist/abis/IEnglishAuctions.json');
require('@thirdweb-dev/contracts-js/dist/abis/IOffers.json');
require('@thirdweb-dev/contracts-js/dist/abis/IPackVRFDirect.json');
require('@thirdweb-dev/contracts-js/dist/abis/IPermissions.json');
require('@thirdweb-dev/contracts-js/dist/abis/IPermissionsEnumerable.json');
require('@thirdweb-dev/contracts-js/dist/abis/IPlatformFee.json');
require('@thirdweb-dev/contracts-js/dist/abis/IPrimarySale.json');
require('@thirdweb-dev/contracts-js/dist/abis/IRoyalty.json');
require('@thirdweb-dev/contracts-js/dist/abis/Ownable.json');
require('@thirdweb-dev/contracts-js/dist/abis/IAccountCore.json');
require('@thirdweb-dev/contracts-js/dist/abis/ContractPublisher.json');
require('cross-fetch');
require('eventemitter3');
require('@thirdweb-dev/contracts-js/dist/abis/Forwarder.json');
require('@thirdweb-dev/contracts-js/dist/abis/IBurnableERC20.json');
require('@thirdweb-dev/contracts-js/dist/abis/IDrop.json');
require('@thirdweb-dev/contracts-js/dist/abis/IDropERC20_V2.json');
require('@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase.json');
require('@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase_V1.json');
require('@thirdweb-dev/contracts-js/dist/abis/IERC20Permit.json');
require('@thirdweb-dev/contracts-js/dist/abis/IMintableERC20.json');
require('@thirdweb-dev/contracts-js/dist/abis/IMulticall.json');
require('@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC20.json');
require('@thirdweb-dev/contracts-js/dist/abis/IBurnableERC721.json');
require('@thirdweb-dev/contracts-js/dist/abis/IClaimableERC721.json');
require('@thirdweb-dev/contracts-js/dist/abis/IDelayedReveal.json');
require('@thirdweb-dev/contracts-js/dist/abis/IDropERC721_V3.json');
require('@thirdweb-dev/contracts-js/dist/abis/IERC721Enumerable.json');
require('@thirdweb-dev/contracts-js/dist/abis/IERC721Supply.json');
require('@thirdweb-dev/contracts-js/dist/abis/ILazyMint.json');
require('@thirdweb-dev/contracts-js/dist/abis/IMintableERC721.json');
require('@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC721.json');
require('@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC721_V1.json');
require('@thirdweb-dev/contracts-js/dist/abis/LazyMintWithTier.json');
require('@thirdweb-dev/contracts-js/dist/abis/SharedMetadata.json');
require('@thirdweb-dev/contracts-js/dist/abis/zora_IERC721Drop.json');
require('@thirdweb-dev/contracts-js/dist/abis/IBurnableERC1155.json');
require('@thirdweb-dev/contracts-js/dist/abis/IClaimableERC1155.json');
require('@thirdweb-dev/contracts-js/dist/abis/IDrop1155.json');
require('@thirdweb-dev/contracts-js/dist/abis/IDropERC1155_V2.json');
require('@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase1155.json');
require('@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase1155_V1.json');
require('@thirdweb-dev/contracts-js/dist/abis/IERC1155Enumerable.json');
require('@thirdweb-dev/contracts-js/dist/abis/IMintableERC1155.json');
require('@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC1155.json');
require('ethers/lib/utils.js');
require('@thirdweb-dev/contracts-js/dist/abis/TWMultichainRegistryRouter.json');
require('@thirdweb-dev/generated-abis');
require('@thirdweb-dev/contracts-js/dist/abis/TWFactory.json');
require('@thirdweb-dev/contracts-js/dist/abis/TWRegistry.json');

const twProxyArtifactZK = {
  _format: "hh-zksolc-artifact-1",
  contractName: "TWProxy",
  sourceName: "contracts/TWProxy.sol",
  abi: [{
    inputs: [{
      internalType: "address",
      name: "_logic",
      type: "address"
    }, {
      internalType: "bytes",
      name: "_data",
      type: "bytes"
    }],
    stateMutability: "payable",
    type: "constructor"
  }, {
    stateMutability: "payable",
    type: "fallback"
  }, {
    stateMutability: "payable",
    type: "receive"
  }],
  bytecode: "",
  deployedBytecode: "",
  linkReferences: {},
  deployedLinkReferences: {},
  factoryDeps: {}
};

/* eslint-disable no-useless-computed-key */

const AddressZero = "0x0000000000000000000000000000000000000000";

/**
 * @internal
 */
const CONTRACT_ADDRESSES = {
  [280]: {
    openzeppelinForwarder: "0x12A305cc7168fa3b7B172fE53c57b9a22716F667",
    openzeppelinForwarderEOA: AddressZero,
    biconomyForwarder: AddressZero
  },
  [324]: {
    openzeppelinForwarder: "0x4e0C3577335961Ff800FFDA24981EB2F38D94483",
    openzeppelinForwarderEOA: AddressZero,
    biconomyForwarder: AddressZero
  }
};
const IMPLEMENTATIONS = {
  // ZKSync Era Testnet
  [280]: {
    DropERC721: "0xA8E28D98203848401A4f924358e6c337153D0f04",
    DropERC1155: "0xf3C7d3F0AA374a2D32489929e24D3e9313Aec8bb",
    DropERC20: "0x4027561E163a420c4e5Db46E07EBd581CAa8Bb62",
    SignatureDrop: "",
    Marketplace: "0xA77041a7A34A67D7285c8d3550110e441009436e",
    MarketplaceV3: "0x292c324920d4120F928dA6f04548442fa10B8B0f",
    TokenERC721: "0xe04593be4c928769ACb157aab0214be1c4E7b6F6",
    TokenERC1155: "0x4e0C3577335961Ff800FFDA24981EB2F38D94483",
    TokenERC20: "0x0aecDe90BC11303871E6e4D7d83Ee84433BC115C"
  },
  // ZKSync Era Mainnet
  [324]: {
    DropERC721: "0x9742f5ac11958cFAd151eBF0Fc31302fA409036E",
    DropERC1155: "0x4027561E163a420c4e5Db46E07EBd581CAa8Bb62",
    DropERC20: "0xf3C7d3F0AA374a2D32489929e24D3e9313Aec8bb",
    SignatureDrop: "",
    Marketplace: "",
    MarketplaceV3: "0xF8fd1016420c2B7832714241d36Efe55D41df126",
    TokenERC721: "0x26279882D5E93045D4FA986847CAAC048b2Bac3b",
    TokenERC1155: "0xA8E28D98203848401A4f924358e6c337153D0f04",
    TokenERC20: "0x56Abb6a3f25DCcdaDa106191053b1CC54C196DEE"
  }
};

/**
 * @internal
 * @param chainId
 * @param contractType
 */
function getImplementation(chainId, contractName) {
  if (chainId in IMPLEMENTATIONS) {
    const approvedImpls = IMPLEMENTATIONS[chainId];
    if (contractName in approvedImpls) {
      return approvedImpls[contractName];
    }
  }
  return null;
}

/**
 *
 * @param chainId - chain id
 * @returns the array of trusted forwarders for the given chain id
 * @internal
 */
function zkGetDefaultTrustedForwarders(chainId, contractName) {
  const biconomyForwarder = CONTRACT_ADDRESSES[chainId].biconomyForwarder;
  const openzeppelinForwarder = CONTRACT_ADDRESSES[chainId].openzeppelinForwarder;
  return contractName && contractName === "Pack" ? [] : [openzeppelinForwarder, biconomyForwarder].filter(a => a !== AddressZero);
}

async function zkDeployContractFromUri(publishMetadataUri, constructorParamValues, signer, storage, chainId, options) {
  const {
    compilerMetadata,
    extendedMetadata
  } = await contractPublisher.fetchAndCacheDeployMetadata(publishMetadataUri, storage);
  const forceDirectDeploy = options?.forceDirectDeploy || false;
  if (extendedMetadata && extendedMetadata.factoryDeploymentData && !forceDirectDeploy && (!extendedMetadata.deployType || extendedMetadata.deployType !== "standard")) {
    if (extendedMetadata.isDeployableViaProxy || extendedMetadata.isDeployableViaFactory || extendedMetadata.deployType === "autoFactory") {
      const implementationAddress = getImplementation(chainId, compilerMetadata.name);
      if (!implementationAddress) {
        throw new Error("Contract not supported yet.");
      }
      const initializerParamTypes = sdk.extractFunctionParamsFromAbi(compilerMetadata.abi, extendedMetadata.factoryDeploymentData.implementationInitializerFunction).map(p => p.type);
      const paramValues = sdk.convertParamValues(initializerParamTypes, constructorParamValues);
      const encodedInitializer = ethers.Contract.getInterface(compilerMetadata.abi).encodeFunctionData(extendedMetadata.factoryDeploymentData.implementationInitializerFunction, paramValues);
      const proxyFactory = new zksyncWeb3.ContractFactory(twProxyArtifactZK.abi, twProxyArtifactZK.bytecode, signer, "create");
      const proxy = await proxyFactory.deploy(implementationAddress, encodedInitializer);
      await proxy.deployed();

      // register on multichain registry
      await registerContractOnMultiChainRegistry(proxy.address, chainId, compilerMetadata.metadataUri);
      return proxy.address;
    } else {
      throw new Error("Invalid deploy type");
    }
  } else {
    // throw new Error("Contract not supported yet.");
    const bytecode = compilerMetadata.bytecode.startsWith("0x") ? compilerMetadata.bytecode : `0x${compilerMetadata.bytecode}`;
    if (!ethers.utils.isHexString(bytecode)) {
      throw new Error(`Contract bytecode is invalid.\n\n${bytecode}`);
    }
    const constructorParamTypes = contractPublisher.extractConstructorParamsFromAbi(compilerMetadata.abi).map(p => p.type);
    const paramValues = sdk.convertParamValues(constructorParamTypes, constructorParamValues);
    const factory = new zksyncWeb3.ContractFactory(compilerMetadata.abi, compilerMetadata.bytecode, signer, "create");
    const contract = await factory.deploy(...paramValues);

    // register on multichain registry
    await registerContractOnMultiChainRegistry(contract.address, chainId, compilerMetadata.metadataUri);
    return contract.address;
  }
}
async function getZkTransactionsForDeploy() {
  let transactions = [];
  transactions.push({
    contractType: "proxy",
    addresses: []
  });
  return transactions;
}
async function registerContractOnMultiChainRegistry(address, chainId, metadataURI) {
  try {
    // random wallet is fine here, we're doing gasless calls
    const wallet = ethers.Wallet.createRandom();
    const sdk$1 = sdk.ThirdwebSDK.fromPrivateKey(wallet.privateKey, "polygon", {
      gasless: {
        openzeppelin: {
          relayerUrl: "https://api.defender.openzeppelin.com/autotasks/dad61716-3624-46c9-874f-0e73f15f04d5/runs/webhook/7d6a1834-dd33-4b7b-8af4-b6b4719a0b97/FdHMqyF3p6MGHw6K2nkLsv",
          relayerForwarderAddress: "0xEbc1977d1aC2fe1F6DAaF584E2957F7c436fcdEF"
        },
        experimentalChainlessSupport: true
      }
    });
    const existingMeta = await sdk$1.multiChainRegistry.getContractMetadataURI(chainId, address);
    if (existingMeta && existingMeta !== "") {
      return true;
    }
    // add to multichain registry with metadata uri unlocks the contract on SDK/dashboard for everyone
    await sdk$1.multiChainRegistry.addContract({
      address,
      chainId,
      metadataURI
    });
    return true;
  } catch (e) {
    console.log("Error registering contract on multi chain registry", e);
    return false;
  }
}

exports.CONTRACT_ADDRESSES = CONTRACT_ADDRESSES;
exports.IMPLEMENTATIONS = IMPLEMENTATIONS;
exports.getImplementation = getImplementation;
exports.getZkTransactionsForDeploy = getZkTransactionsForDeploy;
exports.zkDeployContractFromUri = zkDeployContractFromUri;
exports.zkGetDefaultTrustedForwarders = zkGetDefaultTrustedForwarders;
