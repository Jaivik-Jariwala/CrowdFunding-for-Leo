'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../../../dist/defineProperty-6ca2d9a5.cjs.prod.js');
var ethers = require('ethers');

const _abi = [{
  inputs: [{
    internalType: "address",
    name: "_trustedForwarder",
    type: "address"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "implementation",
    type: "address"
  }, {
    indexed: false,
    internalType: "address",
    name: "proxy",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "deployer",
    type: "address"
  }],
  name: "ProxyDeployed",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "_implementation",
    type: "address"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }, {
    internalType: "bytes32",
    name: "_salt",
    type: "bytes32"
  }],
  name: "deployProxyByImplementation",
  outputs: [{
    internalType: "address",
    name: "deployedProxy",
    type: "address"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "forwarder",
    type: "address"
  }],
  name: "isTrustedForwarder",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}];
const _bytecode = "0x60a060405234801561001057600080fd5b50604051610a46380380610a4683398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516109bb61008b600039600061017a01526109bb6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806311b804ab14610046578063572b6c051461006f578063ac9650d814610092575b600080fd5b610059610054366004610678565b6100b2565b6040516100669190610742565b60405180910390f35b61008261007d366004610756565b610178565b6040519015158152602001610066565b6100a56100a0366004610771565b6101aa565b6040516100669190610841565b6000806100bd61029f565b836040516020016100e792919060609290921b6001600160601b0319168252601482015260340190565b60405160208183030381529060405280519060200120905061010985826102ae565b915061011361029f565b6001600160a01b0316856001600160a01b03167f9e0862c4ebff2150fbbfd3f8547483f55bdec0c34fd977d3fccaa55d6c4ce784846040516101559190610742565b60405180910390a38351156101705761016e828561034d565b505b509392505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b6060816001600160401b038111156101c4576101c4610662565b6040519080825280602002602001820160405280156101f757816020015b60608152602001906001900390816101e25790505b50905060005b82811015610297576102673085858481811061021b5761021b6108a3565b905060200281019061022d91906108b9565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061039692505050565b828281518110610279576102796108a3565b6020026020010181905250808061028f90610906565b9150506101fd565b505b92915050565b60006102a96103bb565b905090565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528360601b60148201526e5af43d82803e903d91602b57fd5bf360881b6028820152826037826000f59150506001600160a01b0381166102995760405162461bcd60e51b8152602060048201526017602482015276115490cc4c4d8dce8818dc99585d194c8819985a5b1959604a1b60448201526064015b60405180910390fd5b606061038f83836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c656400008152506103dd565b9392505050565b606061038f838360405180606001604052806027815260200161095f602791396103f4565b60006103c633610178565b156103d8575060131936013560601c90565b503390565b60606103ec84846000856104cf565b949350505050565b60606103ff846105fe565b61045a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610344565b600080856001600160a01b031685604051610475919061092f565b600060405180830381855af49150503d80600081146104b0576040519150601f19603f3d011682016040523d82523d6000602084013e6104b5565b606091505b50915091506104c582828661060d565b9695505050505050565b6060824710156105305760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610344565b610539856105fe565b6105855760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610344565b600080866001600160a01b031685876040516105a1919061092f565b60006040518083038185875af1925050503d80600081146105de576040519150601f19603f3d011682016040523d82523d6000602084013e6105e3565b606091505b50915091506105f382828661060d565b979650505050505050565b6001600160a01b03163b151590565b6060831561061c57508161038f565b82511561062c5782518084602001fd5b8160405162461bcd60e51b8152600401610344919061094b565b80356001600160a01b038116811461065d57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561068d57600080fd5b61069684610646565b925060208401356001600160401b03808211156106b257600080fd5b818601915086601f8301126106c657600080fd5b8135818111156106d8576106d8610662565b604051601f8201601f19908116603f0116810190838211818310171561070057610700610662565b8160405282815289602084870101111561071957600080fd5b826020860160208301376000602084830101528096505050505050604084013590509250925092565b6001600160a01b0391909116815260200190565b60006020828403121561076857600080fd5b61038f82610646565b6000806020838503121561078457600080fd5b82356001600160401b038082111561079b57600080fd5b818501915085601f8301126107af57600080fd5b8135818111156107be57600080fd5b8660208260051b85010111156107d357600080fd5b60209290920196919550909350505050565b60005b838110156108005781810151838201526020016107e8565b8381111561080f576000848401525b50505050565b6000815180845261082d8160208601602086016107e5565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561089657603f19888603018452610884858351610815565b94509285019290850190600101610868565b5092979650505050505050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126108d057600080fd5b8301803591506001600160401b038211156108ea57600080fd5b6020019150368190038213156108ff57600080fd5b9250929050565b600060001982141561092857634e487b7160e01b600052601160045260246000fd5b5060010190565b600082516109418184602087016107e5565b9190910192915050565b60208152600061038f602083018461081556fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212209a6db6e6646182deab3aba8687411f84f38af559380420af023cc2f676e346da64736f6c634300080c0033";
const isSuperArgs = xs => xs.length > 1;
class TWStatelessFactory__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }
  deploy(_trustedForwarder, overrides) {
    return super.deploy(_trustedForwarder, overrides || {});
  }
  getDeployTransaction(_trustedForwarder, overrides) {
    return super.getDeployTransaction(_trustedForwarder, overrides || {});
  }
  attach(address) {
    return super.attach(address);
  }
  connect(signer) {
    return super.connect(signer);
  }
  static createInterface() {
    return new ethers.utils.Interface(_abi);
  }
  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi, signerOrProvider);
  }
}
defineProperty._defineProperty(TWStatelessFactory__factory, "bytecode", _bytecode);
defineProperty._defineProperty(TWStatelessFactory__factory, "abi", _abi);

exports.TWStatelessFactory__factory = TWStatelessFactory__factory;
