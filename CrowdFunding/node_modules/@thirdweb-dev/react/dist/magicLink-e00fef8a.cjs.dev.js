'use strict';

var wallets = require('@thirdweb-dev/wallets');
var reactCore = require('@thirdweb-dev/react-core');
var React = require('react');
var basic = require('./basic-cf8743c1.cjs.dev.js');
var InputSelectionUI = require('./InputSelectionUI-1c98eb97.cjs.dev.js');
var jsxRuntime = require('react/jsx-runtime');
require('@emotion/react');
require('@emotion/styled');
require('@radix-ui/colors');
require('@radix-ui/react-icons');

function magicLink(config) {
  const selectUI = props => /*#__PURE__*/jsxRuntime.jsx(MagicSelectionUI, {
    ...props,
    emailLogin: config.emailLogin !== false,
    smsLogin: config.smsLogin !== false
  });
  return {
    id: wallets.MagicLink.id,
    meta: wallets.MagicLink.meta,
    create: options => new wallets.MagicLink({
      ...options,
      ...config
    }),
    connectUI(props) {
      return /*#__PURE__*/jsxRuntime.jsx(MagicConnectionUI, {
        ...props,
        type: config.type || "auth"
      });
    },
    // select UI only for auth
    selectUI: config.type === "connect" ? undefined : selectUI,
    isInstalled() {
      return false;
    }
  };
}
const MagicSelectionUI = props => {
  const isEmailEnabled = props.emailLogin !== false;
  const isSMSEnabled = props.smsLogin !== false;
  let placeholder = "Enter your email or phone number";
  let type = "text";
  let emptyErrorMessage = "email or phone number is required";
  if (isEmailEnabled && !isSMSEnabled) {
    placeholder = "Enter your email address";
    emptyErrorMessage = "email address is required";
    type = "email";
  } else if (!isEmailEnabled && isSMSEnabled) {
    placeholder = "Enter your phone number";
    emptyErrorMessage = "phone number is required";
    type = "tel";
  }
  if (!isEmailEnabled && !isSMSEnabled) {
    throw new Error('MagicLink must have either "emailLogin" or "smsLogin" enabled');
  }
  return /*#__PURE__*/jsxRuntime.jsx(InputSelectionUI.InputSelectionUI, {
    onSelect: props.onSelect,
    placeholder: placeholder,
    name: "magic-input",
    type: type,
    emptyErrorMessage: emptyErrorMessage,
    errorMessage: input => {
      const isEmail = input.includes("@");
      const isPhone = Number.isInteger(Number(input[input.length - 1]));
      if (isEmail && isEmailEnabled) {
        const emailRegex = /^([a-z0-9_\.-]+)@([\da-z\.-]+)\.([a-z\.]{2,})$/g;
        const isValidEmail = emailRegex.test(input);
        if (!isValidEmail) {
          return "Invalid email address";
        }
      } else if (isPhone && isSMSEnabled) {
        if (!input.startsWith("+")) {
          return "Phone number must start with a country code";
        }
      } else {
        if (isEmailEnabled && isSMSEnabled) {
          return "Invalid email address or phone number";
        }
        if (isEmailEnabled) {
          return "Invalid email address";
        }
        if (isSMSEnabled) {
          return "Invalid phone number";
        }
      }
    },
    supportedWallets: props.supportedWallets
  });
};
const MagicConnectionUI = _ref => {
  let {
    close,
    walletConfig,
    open,
    selectionData,
    supportedWallets,
    type
  } = _ref;
  const connectPrompted = React.useRef(false);
  const singleWallet = supportedWallets.length === 1;
  const connect = reactCore.useConnect();
  React.useEffect(() => {
    if (connectPrompted.current) {
      return;
    }
    connectPrompted.current = true;
    const isEmail = selectionData ? selectionData.includes("@") : false;
    (async () => {
      close();
      try {
        await connect(walletConfig, type === "connect" ? {} : isEmail ? {
          email: selectionData
        } : {
          phoneNumber: selectionData
        });
      } catch (e) {
        if (!singleWallet) {
          open();
        }
        console.error(e);
      }
    })();
  }, [connect, selectionData, walletConfig, close, open, singleWallet, type]);
  return /*#__PURE__*/jsxRuntime.jsx(basic.Flex, {
    justifyContent: "center",
    alignItems: "center",
    style: {
      minHeight: "250px"
    },
    children: /*#__PURE__*/jsxRuntime.jsx(basic.Spinner, {
      size: "md",
      color: "primary"
    })
  });
};

exports.magicLink = magicLink;
