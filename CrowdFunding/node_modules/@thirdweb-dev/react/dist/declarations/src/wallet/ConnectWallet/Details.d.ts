/// <reference types="react" />
import { type NetworkSelectorProps } from "./NetworkSelector";
import * as DropdownMenu from "@radix-ui/react-dropdown-menu";
export type DropDownPosition = {
    side: "top" | "bottom" | "left" | "right";
    align: "start" | "center" | "end";
};
export declare const ConnectedWalletDetails: React.FC<{
    dropdownPosition?: DropDownPosition;
    onDisconnect: () => void;
    theme: "dark" | "light";
    style?: React.CSSProperties;
    networkSelector?: Omit<NetworkSelectorProps, "theme" | "onClose" | "chains">;
    className?: string;
    detailsBtn?: () => JSX.Element;
}>;
export declare const DropdownMenuItem: import("@emotion/styled").StyledComponent<DropdownMenu.DropdownMenuItemProps & import("react").RefAttributes<HTMLDivElement> & {
    theme?: import("@emotion/react").Theme | undefined;
} & {
    theme?: {
        overlay: {
            subdued: string;
        };
        bg: {
            base: string;
            baseHover: string;
            elevated: string;
            elevatedHover: string;
            highlighted: string;
            inverted: string;
            invertedFocused: string;
            danger: string;
        };
        border: {
            base: string;
            elevated: string;
        };
        badge: {
            secondary: string;
        };
        text: {
            neutral: string;
            inverted: string;
            secondary: string;
            danger: string;
        };
        icon: {
            secondary: string;
            primary: string;
            inverted: string;
            danger: string;
            success: string;
            link: string;
        };
        link: {
            primary: string;
            primaryHover: string;
        };
        input: {
            bg: string;
            bgHover: string;
            outline: string;
            focusRing: string;
            errorRing: string;
        };
        tooltip: {
            bg: string;
            text: string;
        };
    } | undefined;
}, {}, {}>;
export declare const StyledChevronRightIcon: import("@emotion/styled").StyledComponent<import("@radix-ui/react-icons/dist/types").IconProps & import("react").RefAttributes<SVGSVGElement> & {
    theme?: import("@emotion/react").Theme | undefined;
} & {
    theme?: {
        overlay: {
            subdued: string;
        };
        bg: {
            base: string;
            baseHover: string;
            elevated: string;
            elevatedHover: string;
            highlighted: string;
            inverted: string;
            invertedFocused: string;
            danger: string;
        };
        border: {
            base: string;
            elevated: string;
        };
        badge: {
            secondary: string;
        };
        text: {
            neutral: string;
            inverted: string;
            secondary: string;
            danger: string;
        };
        icon: {
            secondary: string;
            primary: string;
            inverted: string;
            danger: string;
            success: string;
            link: string;
        };
        link: {
            primary: string;
            primaryHover: string;
        };
        input: {
            bg: string;
            bgHover: string;
            outline: string;
            focusRing: string;
            errorRing: string;
        };
        tooltip: {
            bg: string;
            text: string;
        };
    } | undefined;
}, {}, {}>;
//# sourceMappingURL=Details.d.ts.map