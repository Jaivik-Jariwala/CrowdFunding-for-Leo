'use strict';

var wallets = require('@thirdweb-dev/wallets');
var reactCore = require('@thirdweb-dev/react-core');
var React = require('react');
var basic = require('./basic-cf8743c1.cjs.dev.js');
var InputSelectionUI = require('./InputSelectionUI-1c98eb97.cjs.dev.js');
var jsxRuntime = require('react/jsx-runtime');
require('@emotion/react');
require('@emotion/styled');
require('@radix-ui/colors');
require('@radix-ui/react-icons');

const paperWallet = config => {
  return {
    id: wallets.PaperWallet.id,
    meta: wallets.PaperWallet.meta,
    create(options) {
      return new wallets.PaperWallet({
        ...options,
        ...config
      });
    },
    selectUI: PaperSelectionUI,
    connectUI: PaperConnectionUI
  };
};
const PaperSelectionUI = props => {
  return /*#__PURE__*/jsxRuntime.jsx(InputSelectionUI.InputSelectionUI, {
    onSelect: props.onSelect,
    placeholder: "Enter your email address",
    name: "email",
    type: "email",
    errorMessage: input => {
      const emailRegex = /^([a-z0-9_\.-]+)@([\da-z\.-]+)\.([a-z\.]{2,})$/g;
      const isValidEmail = emailRegex.test(input);
      if (!isValidEmail) {
        return "Invalid email address";
      }
    },
    emptyErrorMessage: "email address is required",
    supportedWallets: props.supportedWallets
  });
};
const PaperConnectionUI = _ref => {
  let {
    close,
    walletConfig,
    open,
    selectionData,
    supportedWallets
  } = _ref;
  const connectPrompted = React.useRef(false);
  const connect = reactCore.useConnect();
  const singleWallet = supportedWallets.length === 1;
  React.useEffect(() => {
    if (connectPrompted.current) {
      return;
    }
    connectPrompted.current = true;
    (async () => {
      close();
      try {
        await connect(walletConfig, {
          email: selectionData
        });
      } catch (e) {
        if (!singleWallet) {
          open();
        }
        console.error(e);
      }
    })();
  }, [connect, walletConfig, close, open, singleWallet, selectionData]);
  return /*#__PURE__*/jsxRuntime.jsx(basic.Flex, {
    justifyContent: "center",
    alignItems: "center",
    style: {
      minHeight: "250px"
    },
    children: /*#__PURE__*/jsxRuntime.jsx(basic.Spinner, {
      size: "md",
      color: "primary"
    })
  });
};

exports.paperWallet = paperWallet;
