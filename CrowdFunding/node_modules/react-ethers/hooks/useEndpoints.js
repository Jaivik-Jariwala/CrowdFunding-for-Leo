import { useEffect } from "react";
import { createFallbackProvider } from "../utils/createFallbackProvider";
import { extractEndpoints } from "../utils/createNetworkInterface";
/**
 * This hook create a Fallback provider with several providers (with API KEYS or not)
 * It render only for one network, otherwise the page is reload (or can it be reuse for multichain?)
 * @returns Fallback provider
 */
export const useEndpoints = (connectionType, setProvider, provider, chainId, customNetworks, apiKeys) => {
    useEffect(() => {
        if (!provider) {
            if (connectionType === "endpoints") {
                setProvider((p) => {
                    if (!p) {
                        const provider = createFallbackProvider(chainId, apiKeys, extractEndpoints(chainId, customNetworks));
                        window.localStorage.removeItem("network-to-initialize");
                        return provider;
                    }
                    return p;
                });
            }
            else
                return;
        }
    }, [setProvider, connectionType, chainId, customNetworks, provider, apiKeys]);
};
